#!/usr/bin/env python3

import requests
import click
import xml.etree.ElementTree as ET
import re

ONLY_NUMBER_VERSION = re.compile(r'^\d+\.\d+(\.\d+)?$')


def get_node(node, tag_name):
    current_node = node
    tag_tokens = tag_name.split(".")

    for tag_token in tag_tokens:
        current_node = get_child_node(current_node, tag_token)

    return current_node


def get_child_node(node, tag_name):
    for child in node:
        if child.tag == tag_name:
            return child

    raise Exception(f"unable to find child with name {tag_name}")


@click.command()
@click.argument("package_name", nargs=1)
@click.option("--all-versions", "--all", "-a", is_flag=True, default=False,
              help="Print all available versions")
def main(package_name: str, all_versions: bool) -> None:
    r = requests.get(f"https://pypi.org/rss/project/{package_name}/releases.xml")
    xml = ET.fromstring(r.text)
    channel = get_node(xml, "channel")
    available_versions = []

    # versions can come such as: 4.0.0rc1, 3.1.0, etc
    # we need to pick only the version that has only numbers, no rc/alfa
    for item in channel:
        if item.tag == 'item':
            title = get_node(item, "title").text
            available_versions.append(title)

    if all_versions:
        for version in available_versions:
            print(version)
        return

    for version in available_versions:
        if ONLY_NUMBER_VERSION.match(version):
            print(version)
            return

    print(available_versions[0])


if __name__ == "__main__":
    main()
