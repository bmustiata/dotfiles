#
# Byobu
#
# you need to add this into the ~/.bashrc that gets executed every
# time a new bash instance is started. .profile is executed only
# on login, and byobu trips on new instances.
#
# This should be before nvm registrations, etc.
#

if [[ "$BYOBU_TTY" == "" ]]; then
    byobu new-session
    return
fi # [[ "$BYOBU_TTY" == "" ]]

export EDITOR=nvim
export PATH="${HOME}/bin/docker/:$PATH"
export PATH="${HOME}/bin:$PATH"

export ARS_PROJECTS_FOLDER="/home/raptor/projects/dotfiles/.projects"
export VIM_ULTISNIPS_FOLDER="/home/raptor/.vim/bundle/ciplogic/UltiSnips"

export PATH="$HOME/programs/VSCode-linux-x64/bin:$PATH"

# For decent vim editing.
export PYTHONPATH='.'
export MYPYPATH='./stubs'


# export PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '

export GOPATH="$HOME/programs/go/tools"
export PATH="$GOPATH/bin:$PATH"

# this is for byobu usage
#alias vim="TERM=xterm-256color nvim"

. ~/bin/async

. ~/.nvm/nvm.sh
. ~/.nvm/bash_completion

# nvm alias default v12

unset CIPLOGIC_ARCHER_CURRENT_PROJECT
unset CIPLOGIC_ARCHER_CURRENT_PY
unset CIPLOGIC_ARCHER_CURRENT_SERVER

eval "$(archer project server py jdk dockerhost kubehost)"

alias p=project
alias s=server
alias dh=dockerhost

alias npmi="npm install --save -E"
alias npmd="npm install --save-dev -E"
alias npmg="npm install -g"

alias cddot="cd $(dirname $(readlink -f ${HOME}/.ciplogicprofilerc))"

alias ap="ansible-playbook"
alias a="ansible"

alias ai="ansible -i /home/raptor/learn/learn/adoc/inventory"
alias api="ansible-playbook -i /home/raptor/learn/learn/adoc/inventory"

alias dc="docker-compose"
alias d="docker"

alias kubef="kubectl apply -f"
alias kubedel="kubectl delete"

# antlr
alias antlr4='java -jar /home/raptor/programs/antlr-4.7.1-complete.jar'
alias grun='java -cp /home/raptor/programs/antlr-4.7.1-complete.jar org.antlr.v4.gui.TestRig'

function _update_ps1() {
    PS1="$(~/.shell/powerline-shell.py $? 2> /dev/null)"
}

if [ "$TERM" != "linux" ] && [ -f ~/.shell/powerline-shell.py ]; then
    source ~/.shell/ps1-show-functions.sh
    PROMPT_COMMAND="_update_ps1; $PROMPT_COMMAND"
fi

# WSL workaround
if [[ "$(umask)" == "0000" ]]; then
    umask 022
fi # [[ "$(umask)" == "0000" ]]

plan $CIPLOGIC_PLAN_SCOPE

