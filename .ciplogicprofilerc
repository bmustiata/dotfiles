#
# Byobu
#
# you need to add this into the ~/.bashrc that gets executed every
# time a new bash instance is started. .profile is executed only
# on login, and byobu trips on new instances.
#
# This should be before nvm registrations, etc.
#

# set -x  # debug with times
# PS4='+\t '

if [[ "$BYOBU_TTY" == "" ]]; then
    byobu new-session
    return
fi # [[ "$BYOBU_TTY" == "" ]]

export ADHESIVE_PARALLEL_PROCESSING=thread

# APM w/a for Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make protected final java.lang.Class java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain) throws java.lang.ClassFormatError accessible: module java.base does not "opens java.lang" to unnamed module @184f6be2
export JAVA_OPTS="--add-opens java.base/java.lang=ALL-UNNAMED"

export EDITOR=nvim
export PATH="${HOME}/bin/apps/:$PATH"
export PATH="${HOME}/bin/docker/:$PATH"
export PATH="${HOME}/bin:$PATH"
export PATH="${HOME}/.local/bin:$PATH"
export PATH="${HOME}/.yarn/bin:$PATH"
export PATH="${HOME}/programs/ge-build-explorer:$PATH"
export PATH="${HOME}/projects/caffc/bin:$PATH"

# please configuration
export PATH="${HOME}/.please:$PATH"
source <(plz --completion_script)

# sdkman
export FREEPLANE_USE_UNSUPPORTED_JAVA_VERSION=1

export ARS_PROJECTS_FOLDER="/home/raptor/projects/dotfiles/.projects"
export VIM_ULTISNIPS_FOLDER="/home/raptor/.vim/bundle/ciplogic/UltiSnips"

# For decent vim editing.
# This also needs: pip install 'python-language-server[pyls-mypy,pyls-black]' neovim rope
export PYTHONPATH='.'
export MYPYPATH='./stubs'

export GOPATH="$HOME/programs/go/tools"
export PATH="$GOPATH/bin:$PATH"

if [[ "$WSL2_GUI_APPS_ENABLED" != "" ]]; then
    # we need vcxsrv - seems better than the default nonsense
    export DISPLAY=$(hostname):0.0

    # vscode should just run under WSL and stop bothering me with installing for Windows
    export DONT_PROMPT_WSL_INSTALL=1
    alias code="code --disable-gpu"

    # --disable-gpu is W/A for WSL yet again
    alias obsidian="silent obsidian --disable-gpu"
fi

# this is for byobu usage
alias vim="TERM=xterm-256color nvim"

alias pdf2md="java -jar /home/raptor/projects/pdf2md/target/pdf2md-1.0-SNAPSHOT.jar"

. ~/bin/async

# Loading NVM using a hack. Normally this should be only `. ~/.nvm/nvm.sh`, but
# unfortunately that is super slow: https://github.com/nvm-sh/nvm/issues/1277
export NVM_DIR="$HOME/.nvm"
[ -s "/usr/local/opt/nvm/etc/bash_completion" ] && . "/usr/local/opt/nvm/etc/bash_completion"
export PATH="$NVM_DIR/versions/node/v$(<$NVM_DIR/alias/default)/bin:$PATH"
source "$NVM_DIR/nvm.sh" --no-use

if [ -f ~/bin/archer.bin ]; then
    alias archer=~/bin/archer.bin
    eval "$(~/bin/archer.bin project server py jdk dockerhost kubehost gosdk gespace issue)"
else
    eval "$(archer project server py jdk dockerhost kubehost gosdk gespace issue)"
fi

alias p=project
alias i=issue
alias kh=kubehost

cddot() {
    DOT_FOLDER=$(dirname $(readlink -f ${HOME}/.ciplogicprofilerc))
    if [[ "$1" == "" ]]; then
        cd $DOT_FOLDER
        return
    fi

    TARGET_FOLDER=$(readlink -f $1)
    # remove from the TARGET_FOLDER the $HOME part, it includes the `/`
    # then concat the dot folder with the target folder
    cd $DOT_FOLDER${TARGET_FOLDER#*$HOME}
}

alias sl=ls

# antlr
alias antlr4='java -jar /home/raptor/programs/antlr-complete-*.jar'
alias grun='java -cp /home/raptor/programs/antlr-complete-*.jar org.antlr.v4.gui.TestRig'

# get rid of the super huge header, same as running ctrl-E all the time
alias k9s="k9s --headless"

if [ -f ~/.shell/powerline-shell.bin ]; then
    # nuitka binary, faaaaaster: nuitka --one-file powerline-shell.py
    function _update_ps1() {
        PS1="$(~/.shell/powerline-shell.bin $? 2> /dev/null)"
    }
else
    echo "warning: using powerline-shell.py instead of bin. run nuitka --onefile ~/.shell/powerline-shell.py (in ~/.shell)"
    function _update_ps1() {
        PS1="$(~/.shell/powerline-shell.py $? 2> /dev/null)"
    }
fi

if [ "$TERM" != "linux" ] && [ -f ~/.shell/powerline-shell.py ]; then
    source ~/.shell/ps1-show-functions.sh
    PROMPT_COMMAND="_update_ps1; $PROMPT_COMMAND"
fi

# WSL workaround
if [[ "$(umask)" == "0000" ]]; then
    umask 022
    setxkbmap us -variant colemak
fi # [[ "$(umask)" == "0000" ]]

alias xc='setxkbmap us -variant colemak'
alias be='/home/raptor/programs/ge-build-explorer/bazelinio.sh'

. $HOME/.shell/dircolors.sh

# enable implicitly the Num Lock for VMs
sudo sh -c 'setleds +num < /dev/console'

if [[ $(date +%u) -eq 5 ]]; then
  echo FRIDAY: time sheets
  echo https://www.myworkday.com/broadcom/d/pex/home.htmld
fi

