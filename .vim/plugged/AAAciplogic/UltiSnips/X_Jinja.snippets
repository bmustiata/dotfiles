#
# snippet: each
# w (word boundary),
# m (trim spaces on the right of the script)
# Create a for for a jinja template
#
snippet for "Create a for for a jinja template" wm
{% for ${1:domain} in ${2:$1s} %}
${VISUAL}${0:}
{% endfor %}
endsnippet

#
# snippet: eachi
# w (word boundary),
# m (trim spaces on the right of the script)
# Create an inline for for a jinja template
#
snippet eachi "Create an inline for for a jinja template" wm
{% for ${1:domain} in ${2:$1s} %}${VISUAL}${0:}{% endfor %}
endsnippet

#
# snippet: eachkv
# w (word boundary),
# m (trim spaces on the right of the script)
# Foreach item
#
snippet eachkv "Foreach item in map" wm
{% for ${1:key, val} in ${2:map.items()} %}
	${VISUAL}${0:}
{% endfor %}
endsnippet

#
# snippet: if
# w (word boundary),
# m (trim spaces on the right of the script)
# Create an if
#
snippet if "Create an if" wm
{% if ${1:expression} %}
	${VISUAL}${0:}
{% endif %}
endsnippet

#
# snippet: c
# w (word boundary),
# m (trim spaces on the right of the script)
# Add a comment
#
snippet c "Add a comment" wm
{# ${1:comment} #}
endsnippet

#
# snippet: var
# w (word boundary),
# m (trim spaces on the right of the script)
# Render a variable
#
snippet var "Render a variable" wm
{{ ${1:var} }}
endsnippet

#
# snippet: {#
# w (word boundary),
# m (trim spaces on the right of the script)
# Create a statement
#
snippet {% "Create a statement" wm
{% ${1:if} %}
	${VISUAL}${0:}
{% end$1 %}
endsnippet

#
# snippet: ifi
# w (word boundary),
# m (trim spaces on the right of the script)
# Create an inlined if for a jinja template
#
snippet ifi "Create an inlined if for a jinja template" wm
{% if ${1:enabled} %}${VISUAL}${0:}{% endif %}
endsnippet

