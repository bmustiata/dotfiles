#
# snippet: run
# w (word boundary),
# m (trim spaces on the right of the script)
# Run some code
#
snippet run "Run some code" wm
context.workspace.run("""
	${VISUAL}${0:}
"""${1/.+/, capture_stdout=/}${1:True})
endsnippet


#
# snippet: task
# w (word boundary),
# m (trim spaces on the right of the script)
# Create a new task
#
snippet task "Create a new task" wm
@adhesive.task('${1:^apt install (.*)$}')
def ${2:apt_install}(context${3/.+/, /}${3:package_names}):
	${0:context.workspace.run(f"""
		sudo apt install -y {package_names}
	""")}
endsnippet

#
# snippet: lane
# w (word boundary),
# m (trim spaces on the right of the script)
# Create a new lane
#
snippet lane "Create a new lane" wm
@adhesive.lane('${1:lane name}')
def ${2:lane_function}(context):
	${0:yield context.workspace}
endsnippet


#
# snippet: gw
# w (word boundary),
# m (trim spaces on the right of the script)
# Create a new complex gateway
#
snippet gw "Create a new complex gateway" wm
@adhesive.gateway('${1:^apt install (.*)$}')
def ${2:apt_install}(context${3/.+/, /}${3:package_names}):
	${0:context.workspace.run(f"""
		sudo apt install -y {package_names}
	""")}
endsnippet

#
# snippet: data
# w (word boundary),
# m (trim spaces on the right of the script)
# Add a data assignment
#
snippet data "Add a data assignment" wm
context.data.${1:var_name} = ${0:}
endsnippet


#
# snippet: adhesive
# w (word boundary),
# m (trim spaces on the right of the script)
# Create a basic adhesive
#
snippet adhesive "Create a basic adhesive" wm
import adhesive


${0:}


adhesive.${1/.+/bpmn_/}build(${1/.+/"/}${1:test.bpmn}${1/.+/"/})
endsnippet

#
# snippet: test
# w (word boundary),
# m (trim spaces on the right of the script)
# Create a unittest
#
snippet test "Create a unittest" wm
import unittest


test = unittest.TestCase()
endsnippet

#
# snippet: ssh
# w (word boundary),
# m (trim spaces on the right of the script)
# Create a ssh workspace
#
snippet ssh "Create a ssh workspace" wm
with ssh.inside(
		${1:context.workspace},
		"${2:localhost}"${3/.+/,
		username="/}${3:root}${3/.+/"/}${4/.+/,
		key_filename="/}${4:/home/raptor/.ssh/id_rsa}${4/.+/",
	/}) as ${5:ssh_workspace}:
	${VISUAL}${0:}
endsnippet

#
# snippet: docker
# w (word boundary),
# m (trim spaces on the right of the script)
# Create a docker workspace
#
snippet docker "Create a docker workspace" wm
with docker.inside(
	${1:context.workspace},
	"${2:ubuntu:18.04}"${3/.+/,
	"/}${3:-v /tmp:/tmp}${3/.+/"/}) as ${4:docker_workspace}:
	${VISUAL}${0:}
endsnippet

